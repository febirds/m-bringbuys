<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bringbuys.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.bringbuys.bean.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="site" property="site" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="DATE" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, phone, email, site, message, ctime, user_type
  </sql>
  <select id="selectByConn" resultMap="BaseResultMap" parameterType="com.bringbuys.bean.User" >
    select 
    <include refid="Base_Column_List" />
    from users
    <trim prefix=" where 1=1 ">
      <if test="userName != null">
        and user_name like '%' #{userName} '%'
      </if>
      <if test="startTime != null">
        and ctime >= #{startTime}
      </if>
      <if test="endTime != null">
        <![CDATA[
        and ctime <=  #{endTime}
        ]]>
      </if>
      order by ctime desc
    </trim>
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bringbuys.bean.User" >
    insert into users (id,  user_name, phone, email, site, message, ctime, user_type)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{ctime,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR})
  </insert>
  <update id="updateById" parameterType="com.bringbuys.bean.User" >
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      utime = #{utime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>